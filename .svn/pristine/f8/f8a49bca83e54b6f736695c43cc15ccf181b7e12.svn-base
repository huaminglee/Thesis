//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Activities_ActivityTypes", "ActivityTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.ActivityTypes), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Activity), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Activities_Addresses", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Addresses), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Activity), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Activities_Addresses1", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.Addresses), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Activity), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Activities_Executer", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Companies), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Activity), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Activities_Owner", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Companies), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Activity), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Activities_Relations", "Relations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.Relations), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Activity), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Activities_Shifts", "Shifts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.Shifts), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Activity), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Addresses_Cities", "Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.Cities), "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Addresses), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Addresses_Countries", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.Countries), "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Addresses), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Addresses_Electriciteities", "Electriciteities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.Electriciteities), "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Addresses), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Addresses_Lookup", "Lookup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.Lookup), "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Addresses), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Addresses_ObjectTypes", "ObjectTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.ObjectTypes), "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Addresses), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_RelationInAddresses_Addresses", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Addresses), "RelationInAddresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.RelationInAddresses), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Me__Appli__6442E2C9", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Applications), "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_Paths), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Ro__Appli__02C769E9", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_Roles), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Us__Appli__540C7B00", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Me__UserI__65370702", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Pe__PathI__1B9317B3", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Paths), "aspnet_PersonalizationAllUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.aspnet_PersonalizationAllUsers), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Pe__PathI__1F63A897", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.aspnet_Paths), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Pe__UserI__2057CCD0", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.aspnet_Users), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Users), "aspnet_Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Thesis.Entities.aspnet_Profile), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_ModulesInRoles_aspnet_Roles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Roles), "ModulesInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.ModulesInRoles), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_RolesInTree_aspnet_Roles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Roles), "RolesInTree", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.RolesInTree), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_RolesInTree_aspnet_Roles1", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.aspnet_Roles), "RolesInTree", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.RolesInTree), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_Cities_Countries", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Countries), "Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.Cities), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_LookupResources_Languages", "Languages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Languages), "LookupResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.LookupResources), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_LookupResources_Lookup", "Lookup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Lookup), "LookupResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.LookupResources), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_ModulesInRoles_Modules", "Modules", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Modules), "ModulesInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.ModulesInRoles), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "FK_RelationInAddresses_Relations", "Relations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Thesis.Entities.Relations), "RelationInAddresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.RelationInAddresses), true)]
[assembly: EdmRelationshipAttribute("Thesis.Entities", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Thesis.Entities.aspnet_Users))]

#endregion

namespace Thesis.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AxiomEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AxiomEntities object using the connection string found in the 'AxiomEntities' section of the application configuration file.
        /// </summary>
        public AxiomEntities() : base("name=AxiomEntities", "AxiomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AxiomEntities object.
        /// </summary>
        public AxiomEntities(string connectionString) : base(connectionString, "AxiomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AxiomEntities object.
        /// </summary>
        public AxiomEntities(EntityConnection connection) : base(connection, "AxiomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activity
        {
            get
            {
                if ((_Activity == null))
                {
                    _Activity = base.CreateObjectSet<Activity>("Activity");
                }
                return _Activity;
            }
        }
        private ObjectSet<Activity> _Activity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityTypes> ActivityTypes
        {
            get
            {
                if ((_ActivityTypes == null))
                {
                    _ActivityTypes = base.CreateObjectSet<ActivityTypes>("ActivityTypes");
                }
                return _ActivityTypes;
            }
        }
        private ObjectSet<ActivityTypes> _ActivityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Addresses> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Addresses>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Addresses> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressTypes> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressTypes>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressTypes> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Paths> aspnet_Paths
        {
            get
            {
                if ((_aspnet_Paths == null))
                {
                    _aspnet_Paths = base.CreateObjectSet<aspnet_Paths>("aspnet_Paths");
                }
                return _aspnet_Paths;
            }
        }
        private ObjectSet<aspnet_Paths> _aspnet_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
        {
            get
            {
                if ((_aspnet_PersonalizationAllUsers == null))
                {
                    _aspnet_PersonalizationAllUsers = base.CreateObjectSet<aspnet_PersonalizationAllUsers>("aspnet_PersonalizationAllUsers");
                }
                return _aspnet_PersonalizationAllUsers;
            }
        }
        private ObjectSet<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                if ((_aspnet_PersonalizationPerUser == null))
                {
                    _aspnet_PersonalizationPerUser = base.CreateObjectSet<aspnet_PersonalizationPerUser>("aspnet_PersonalizationPerUser");
                }
                return _aspnet_PersonalizationPerUser;
            }
        }
        private ObjectSet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Profile> aspnet_Profile
        {
            get
            {
                if ((_aspnet_Profile == null))
                {
                    _aspnet_Profile = base.CreateObjectSet<aspnet_Profile>("aspnet_Profile");
                }
                return _aspnet_Profile;
            }
        }
        private ObjectSet<aspnet_Profile> _aspnet_Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events
        {
            get
            {
                if ((_aspnet_WebEvent_Events == null))
                {
                    _aspnet_WebEvent_Events = base.CreateObjectSet<aspnet_WebEvent_Events>("aspnet_WebEvent_Events");
                }
                return _aspnet_WebEvent_Events;
            }
        }
        private ObjectSet<aspnet_WebEvent_Events> _aspnet_WebEvent_Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cities> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<Cities>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<Cities> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Companies> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Companies>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Companies> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Countries> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Countries>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Countries> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Electriciteities> Electriciteities
        {
            get
            {
                if ((_Electriciteities == null))
                {
                    _Electriciteities = base.CreateObjectSet<Electriciteities>("Electriciteities");
                }
                return _Electriciteities;
            }
        }
        private ObjectSet<Electriciteities> _Electriciteities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employees> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employees>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employees> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Files> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<Files>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<Files> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Items> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Items>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Items> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Languages> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Languages>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Languages> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lookup> Lookup
        {
            get
            {
                if ((_Lookup == null))
                {
                    _Lookup = base.CreateObjectSet<Lookup>("Lookup");
                }
                return _Lookup;
            }
        }
        private ObjectSet<Lookup> _Lookup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LookupResources> LookupResources
        {
            get
            {
                if ((_LookupResources == null))
                {
                    _LookupResources = base.CreateObjectSet<LookupResources>("LookupResources");
                }
                return _LookupResources;
            }
        }
        private ObjectSet<LookupResources> _LookupResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Modules> Modules
        {
            get
            {
                if ((_Modules == null))
                {
                    _Modules = base.CreateObjectSet<Modules>("Modules");
                }
                return _Modules;
            }
        }
        private ObjectSet<Modules> _Modules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModulesInRoles> ModulesInRoles
        {
            get
            {
                if ((_ModulesInRoles == null))
                {
                    _ModulesInRoles = base.CreateObjectSet<ModulesInRoles>("ModulesInRoles");
                }
                return _ModulesInRoles;
            }
        }
        private ObjectSet<ModulesInRoles> _ModulesInRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectTypes> ObjectTypes
        {
            get
            {
                if ((_ObjectTypes == null))
                {
                    _ObjectTypes = base.CreateObjectSet<ObjectTypes>("ObjectTypes");
                }
                return _ObjectTypes;
            }
        }
        private ObjectSet<ObjectTypes> _ObjectTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelationInAddresses> RelationInAddresses
        {
            get
            {
                if ((_RelationInAddresses == null))
                {
                    _RelationInAddresses = base.CreateObjectSet<RelationInAddresses>("RelationInAddresses");
                }
                return _RelationInAddresses;
            }
        }
        private ObjectSet<RelationInAddresses> _RelationInAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Relations> Relations
        {
            get
            {
                if ((_Relations == null))
                {
                    _Relations = base.CreateObjectSet<Relations>("Relations");
                }
                return _Relations;
            }
        }
        private ObjectSet<Relations> _Relations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RolesInTree> RolesInTree
        {
            get
            {
                if ((_RolesInTree == null))
                {
                    _RolesInTree = base.CreateObjectSet<RolesInTree>("RolesInTree");
                }
                return _RolesInTree;
            }
        }
        private ObjectSet<RolesInTree> _RolesInTree;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Roofs> Roofs
        {
            get
            {
                if ((_Roofs == null))
                {
                    _Roofs = base.CreateObjectSet<Roofs>("Roofs");
                }
                return _Roofs;
            }
        }
        private ObjectSet<Roofs> _Roofs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shifts> Shifts
        {
            get
            {
                if ((_Shifts == null))
                {
                    _Shifts = base.CreateObjectSet<Shifts>("Shifts");
                }
                return _Shifts;
            }
        }
        private ObjectSet<Shifts> _Shifts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivity(Activity activity)
        {
            base.AddObject("Activity", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityTypes(ActivityTypes activityTypes)
        {
            base.AddObject("ActivityTypes", activityTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Addresses addresses)
        {
            base.AddObject("Addresses", addresses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressTypes addressTypes)
        {
            base.AddObject("AddressTypes", addressTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Paths(aspnet_Paths aspnet_Paths)
        {
            base.AddObject("aspnet_Paths", aspnet_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationAllUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers)
        {
            base.AddObject("aspnet_PersonalizationAllUsers", aspnet_PersonalizationAllUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationPerUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser)
        {
            base.AddObject("aspnet_PersonalizationPerUser", aspnet_PersonalizationPerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Profile(aspnet_Profile aspnet_Profile)
        {
            base.AddObject("aspnet_Profile", aspnet_Profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_WebEvent_Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_WebEvent_Events(aspnet_WebEvent_Events aspnet_WebEvent_Events)
        {
            base.AddObject("aspnet_WebEvent_Events", aspnet_WebEvent_Events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(Cities cities)
        {
            base.AddObject("Cities", cities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Companies companies)
        {
            base.AddObject("Companies", companies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Countries countries)
        {
            base.AddObject("Countries", countries);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Electriciteities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElectriciteities(Electriciteities electriciteities)
        {
            base.AddObject("Electriciteities", electriciteities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employees employees)
        {
            base.AddObject("Employees", employees);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(Files files)
        {
            base.AddObject("Files", files);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Items items)
        {
            base.AddObject("Items", items);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Languages languages)
        {
            base.AddObject("Languages", languages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lookup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLookup(Lookup lookup)
        {
            base.AddObject("Lookup", lookup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LookupResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLookupResources(LookupResources lookupResources)
        {
            base.AddObject("LookupResources", lookupResources);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Modules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModules(Modules modules)
        {
            base.AddObject("Modules", modules);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModulesInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModulesInRoles(ModulesInRoles modulesInRoles)
        {
            base.AddObject("ModulesInRoles", modulesInRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectTypes(ObjectTypes objectTypes)
        {
            base.AddObject("ObjectTypes", objectTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelationInAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationInAddresses(RelationInAddresses relationInAddresses)
        {
            base.AddObject("RelationInAddresses", relationInAddresses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Relations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelations(Relations relations)
        {
            base.AddObject("Relations", relations);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RolesInTree EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRolesInTree(RolesInTree rolesInTree)
        {
            base.AddObject("RolesInTree", rolesInTree);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roofs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoofs(Roofs roofs)
        {
            base.AddObject("Roofs", roofs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shifts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShifts(Shifts shifts)
        {
            base.AddObject("Shifts", shifts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="activityID">Initial value of the ActivityID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isCompleted">Initial value of the IsCompleted property.</param>
        /// <param name="isInvoiced">Initial value of the IsInvoiced property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        /// <param name="executerID">Initial value of the ExecuterID property.</param>
        public static Activity CreateActivity(global::System.Int32 activityID, global::System.Int32 typeID, global::System.Int32 addressID, global::System.String name, global::System.String description, global::System.Boolean isCompleted, global::System.Boolean isInvoiced, global::System.DateTime endDate, global::System.Int32 ownerID, global::System.Int32 executerID)
        {
            Activity activity = new Activity();
            activity.ActivityID = activityID;
            activity.TypeID = typeID;
            activity.AddressID = addressID;
            activity.Name = name;
            activity.Description = description;
            activity.IsCompleted = isCompleted;
            activity.IsInvoiced = isInvoiced;
            activity.EndDate = endDate;
            activity.OwnerID = ownerID;
            activity.ExecuterID = executerID;
            return activity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityID
        {
            get
            {
                return _ActivityID;
            }
            set
            {
                if (_ActivityID != value)
                {
                    OnActivityIDChanging(value);
                    ReportPropertyChanging("ActivityID");
                    _ActivityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityID");
                    OnActivityIDChanged();
                }
            }
        }
        private global::System.Int32 _ActivityID;
        partial void OnActivityIDChanging(global::System.Int32 value);
        partial void OnActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompleted
        {
            get
            {
                return _IsCompleted;
            }
            set
            {
                OnIsCompletedChanging(value);
                ReportPropertyChanging("IsCompleted");
                _IsCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompleted");
                OnIsCompletedChanged();
            }
        }
        private global::System.Boolean _IsCompleted;
        partial void OnIsCompletedChanging(global::System.Boolean value);
        partial void OnIsCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInvoiced
        {
            get
            {
                return _IsInvoiced;
            }
            set
            {
                OnIsInvoicedChanging(value);
                ReportPropertyChanging("IsInvoiced");
                _IsInvoiced = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInvoiced");
                OnIsInvoicedChanged();
            }
        }
        private global::System.Boolean _IsInvoiced;
        partial void OnIsInvoicedChanging(global::System.Boolean value);
        partial void OnIsInvoicedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RemainderDate
        {
            get
            {
                return _RemainderDate;
            }
            set
            {
                OnRemainderDateChanging(value);
                ReportPropertyChanging("RemainderDate");
                _RemainderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemainderDate");
                OnRemainderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RemainderDate;
        partial void OnRemainderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRemainderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExecuterID
        {
            get
            {
                return _ExecuterID;
            }
            set
            {
                OnExecuterIDChanging(value);
                ReportPropertyChanging("ExecuterID");
                _ExecuterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecuterID");
                OnExecuterIDChanged();
            }
        }
        private global::System.Int32 _ExecuterID;
        partial void OnExecuterIDChanging(global::System.Int32 value);
        partial void OnExecuterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlannedHours
        {
            get
            {
                return _PlannedHours;
            }
            set
            {
                OnPlannedHoursChanging(value);
                ReportPropertyChanging("PlannedHours");
                _PlannedHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlannedHours");
                OnPlannedHoursChanged();
            }
        }
        private Nullable<global::System.Int32> _PlannedHours;
        partial void OnPlannedHoursChanging(Nullable<global::System.Int32> value);
        partial void OnPlannedHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShiftID
        {
            get
            {
                return _ShiftID;
            }
            set
            {
                OnShiftIDChanging(value);
                ReportPropertyChanging("ShiftID");
                _ShiftID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShiftID");
                OnShiftIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ShiftID;
        partial void OnShiftIDChanging(Nullable<global::System.Int32> value);
        partial void OnShiftIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceText
        {
            get
            {
                return _InvoiceText;
            }
            set
            {
                OnInvoiceTextChanging(value);
                ReportPropertyChanging("InvoiceText");
                _InvoiceText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvoiceText");
                OnInvoiceTextChanged();
            }
        }
        private global::System.String _InvoiceText;
        partial void OnInvoiceTextChanging(global::System.String value);
        partial void OnInvoiceTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelationID
        {
            get
            {
                return _RelationID;
            }
            set
            {
                OnRelationIDChanging(value);
                ReportPropertyChanging("RelationID");
                _RelationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationID");
                OnRelationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RelationID;
        partial void OnRelationIDChanging(Nullable<global::System.Int32> value);
        partial void OnRelationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceAddressID
        {
            get
            {
                return _InvoiceAddressID;
            }
            set
            {
                OnInvoiceAddressIDChanging(value);
                ReportPropertyChanging("InvoiceAddressID");
                _InvoiceAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceAddressID");
                OnInvoiceAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceAddressID;
        partial void OnInvoiceAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                OnDocumentIDChanging(value);
                ReportPropertyChanging("DocumentID");
                _DocumentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentID");
                OnDocumentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentID;
        partial void OnDocumentIDChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_ActivityTypes", "ActivityTypes")]
        public ActivityTypes ActivityTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityTypes>("Thesis.Entities.FK_Activities_ActivityTypes", "ActivityTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityTypes>("Thesis.Entities.FK_Activities_ActivityTypes", "ActivityTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActivityTypes> ActivityTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityTypes>("Thesis.Entities.FK_Activities_ActivityTypes", "ActivityTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActivityTypes>("Thesis.Entities.FK_Activities_ActivityTypes", "ActivityTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Addresses", "Addresses")]
        public Addresses Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Addresses> AddressesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Addresses1", "Addresses")]
        public Addresses Addresses1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses1", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses1", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Addresses> Addresses1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses1", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Addresses>("Thesis.Entities.FK_Activities_Addresses1", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Executer", "Companies")]
        public Companies Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Thesis.Entities.FK_Activities_Executer", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Thesis.Entities.FK_Activities_Executer", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Companies> CompaniesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Thesis.Entities.FK_Activities_Executer", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Companies>("Thesis.Entities.FK_Activities_Executer", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Owner", "Companies")]
        public Companies Companies1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Thesis.Entities.FK_Activities_Owner", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Thesis.Entities.FK_Activities_Owner", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Companies> Companies1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Thesis.Entities.FK_Activities_Owner", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Companies>("Thesis.Entities.FK_Activities_Owner", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Relations", "Relations")]
        public Relations Relations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relations>("Thesis.Entities.FK_Activities_Relations", "Relations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relations>("Thesis.Entities.FK_Activities_Relations", "Relations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Relations> RelationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relations>("Thesis.Entities.FK_Activities_Relations", "Relations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Relations>("Thesis.Entities.FK_Activities_Relations", "Relations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Shifts", "Shifts")]
        public Shifts Shifts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shifts>("Thesis.Entities.FK_Activities_Shifts", "Shifts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shifts>("Thesis.Entities.FK_Activities_Shifts", "Shifts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shifts> ShiftsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shifts>("Thesis.Entities.FK_Activities_Shifts", "Shifts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shifts>("Thesis.Entities.FK_Activities_Shifts", "Shifts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="ActivityTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityTypes object.
        /// </summary>
        /// <param name="activityTypeID">Initial value of the ActivityTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ActivityTypes CreateActivityTypes(global::System.Int32 activityTypeID, global::System.String name)
        {
            ActivityTypes activityTypes = new ActivityTypes();
            activityTypes.ActivityTypeID = activityTypeID;
            activityTypes.Name = name;
            return activityTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityTypeID
        {
            get
            {
                return _ActivityTypeID;
            }
            set
            {
                if (_ActivityTypeID != value)
                {
                    OnActivityTypeIDChanging(value);
                    ReportPropertyChanging("ActivityTypeID");
                    _ActivityTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityTypeID");
                    OnActivityTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ActivityTypeID;
        partial void OnActivityTypeIDChanging(global::System.Int32 value);
        partial void OnActivityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_ActivityTypes", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Thesis.Entities.FK_Activities_ActivityTypes", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Thesis.Entities.FK_Activities_ActivityTypes", "Activity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Addresses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Addresses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Addresses object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        public static Addresses CreateAddresses(global::System.Int32 addressID)
        {
            Addresses addresses = new Addresses();
            addresses.AddressID = addressID;
            return addresses;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressType
        {
            get
            {
                return _AddressType;
            }
            set
            {
                OnAddressTypeChanging(value);
                ReportPropertyChanging("AddressType");
                _AddressType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressType");
                OnAddressTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressType;
        partial void OnAddressTypeChanging(Nullable<global::System.Int32> value);
        partial void OnAddressTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HouseNumber
        {
            get
            {
                return _HouseNumber;
            }
            set
            {
                OnHouseNumberChanging(value);
                ReportPropertyChanging("HouseNumber");
                _HouseNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HouseNumber");
                OnHouseNumberChanged();
            }
        }
        private global::System.String _HouseNumber;
        partial void OnHouseNumberChanging(global::System.String value);
        partial void OnHouseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Addition
        {
            get
            {
                return _Addition;
            }
            set
            {
                OnAdditionChanging(value);
                ReportPropertyChanging("Addition");
                _Addition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Addition");
                OnAdditionChanged();
            }
        }
        private global::System.String _Addition;
        partial void OnAdditionChanging(global::System.String value);
        partial void OnAdditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeyPersonName
        {
            get
            {
                return _KeyPersonName;
            }
            set
            {
                OnKeyPersonNameChanging(value);
                ReportPropertyChanging("KeyPersonName");
                _KeyPersonName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KeyPersonName");
                OnKeyPersonNameChanged();
            }
        }
        private global::System.String _KeyPersonName;
        partial void OnKeyPersonNameChanging(global::System.String value);
        partial void OnKeyPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeyPersonPhone
        {
            get
            {
                return _KeyPersonPhone;
            }
            set
            {
                OnKeyPersonPhoneChanging(value);
                ReportPropertyChanging("KeyPersonPhone");
                _KeyPersonPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KeyPersonPhone");
                OnKeyPersonPhoneChanged();
            }
        }
        private global::System.String _KeyPersonPhone;
        partial void OnKeyPersonPhoneChanging(global::System.String value);
        partial void OnKeyPersonPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectType
        {
            get
            {
                return _ObjectType;
            }
            set
            {
                OnObjectTypeChanging(value);
                ReportPropertyChanging("ObjectType");
                _ObjectType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectType");
                OnObjectTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectType;
        partial void OnObjectTypeChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastInvoiceDate
        {
            get
            {
                return _LastInvoiceDate;
            }
            set
            {
                OnLastInvoiceDateChanging(value);
                ReportPropertyChanging("LastInvoiceDate");
                _LastInvoiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastInvoiceDate");
                OnLastInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastInvoiceDate;
        partial void OnLastInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Electriciteit
        {
            get
            {
                return _Electriciteit;
            }
            set
            {
                OnElectriciteitChanging(value);
                ReportPropertyChanging("Electriciteit");
                _Electriciteit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Electriciteit");
                OnElectriciteitChanged();
            }
        }
        private Nullable<global::System.Int32> _Electriciteit;
        partial void OnElectriciteitChanging(Nullable<global::System.Int32> value);
        partial void OnElectriciteitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DetailDescription
        {
            get
            {
                return _DetailDescription;
            }
            set
            {
                OnDetailDescriptionChanging(value);
                ReportPropertyChanging("DetailDescription");
                _DetailDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DetailDescription");
                OnDetailDescriptionChanged();
            }
        }
        private global::System.String _DetailDescription;
        partial void OnDetailDescriptionChanging(global::System.String value);
        partial void OnDetailDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Information
        {
            get
            {
                return _Information;
            }
            set
            {
                OnInformationChanging(value);
                ReportPropertyChanging("Information");
                _Information = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Information");
                OnInformationChanged();
            }
        }
        private global::System.String _Information;
        partial void OnInformationChanging(global::System.String value);
        partial void OnInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtraLetterText
        {
            get
            {
                return _ExtraLetterText;
            }
            set
            {
                OnExtraLetterTextChanging(value);
                ReportPropertyChanging("ExtraLetterText");
                _ExtraLetterText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExtraLetterText");
                OnExtraLetterTextChanged();
            }
        }
        private global::System.String _ExtraLetterText;
        partial void OnExtraLetterTextChanging(global::System.String value);
        partial void OnExtraLetterTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Addresses", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Addresses", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Addresses", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Addresses1", "Activity")]
        public EntityCollection<Activity> Activity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Addresses1", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Addresses1", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Cities", "Cities")]
        public Cities Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("Thesis.Entities.FK_Addresses_Cities", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("Thesis.Entities.FK_Addresses_Cities", "Cities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cities> CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("Thesis.Entities.FK_Addresses_Cities", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cities>("Thesis.Entities.FK_Addresses_Cities", "Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Countries", "Countries")]
        public Countries Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("Thesis.Entities.FK_Addresses_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("Thesis.Entities.FK_Addresses_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Countries> CountriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("Thesis.Entities.FK_Addresses_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Countries>("Thesis.Entities.FK_Addresses_Countries", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Electriciteities", "Electriciteities")]
        public Electriciteities Electriciteities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Electriciteities>("Thesis.Entities.FK_Addresses_Electriciteities", "Electriciteities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Electriciteities>("Thesis.Entities.FK_Addresses_Electriciteities", "Electriciteities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Electriciteities> ElectriciteitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Electriciteities>("Thesis.Entities.FK_Addresses_Electriciteities", "Electriciteities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Electriciteities>("Thesis.Entities.FK_Addresses_Electriciteities", "Electriciteities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Lookup", "Lookup")]
        public Lookup Lookup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("Thesis.Entities.FK_Addresses_Lookup", "Lookup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("Thesis.Entities.FK_Addresses_Lookup", "Lookup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lookup> LookupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("Thesis.Entities.FK_Addresses_Lookup", "Lookup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lookup>("Thesis.Entities.FK_Addresses_Lookup", "Lookup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_ObjectTypes", "ObjectTypes")]
        public ObjectTypes ObjectTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectTypes>("Thesis.Entities.FK_Addresses_ObjectTypes", "ObjectTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectTypes>("Thesis.Entities.FK_Addresses_ObjectTypes", "ObjectTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ObjectTypes> ObjectTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectTypes>("Thesis.Entities.FK_Addresses_ObjectTypes", "ObjectTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ObjectTypes>("Thesis.Entities.FK_Addresses_ObjectTypes", "ObjectTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RelationInAddresses_Addresses", "RelationInAddresses")]
        public EntityCollection<RelationInAddresses> RelationInAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelationInAddresses>("Thesis.Entities.FK_RelationInAddresses_Addresses", "RelationInAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelationInAddresses>("Thesis.Entities.FK_RelationInAddresses_Addresses", "RelationInAddresses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="AddressTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressTypes object.
        /// </summary>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AddressTypes CreateAddressTypes(global::System.Int32 addressTypeID, global::System.String name)
        {
            AddressTypes addressTypes = new AddressTypes();
            addressTypes.AddressTypeID = addressTypeID;
            addressTypes.Name = name;
            return addressTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                if (_AddressTypeID != value)
                {
                    OnAddressTypeIDChanging(value);
                    ReportPropertyChanging("AddressTypeID");
                    _AddressTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressTypeID");
                    OnAddressTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Me__Appli__6442E2C9", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("Thesis.Entities.FK__aspnet_Me__Appli__6442E2C9", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("Thesis.Entities.FK__aspnet_Me__Appli__6442E2C9", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Paths")]
        public EntityCollection<aspnet_Paths> aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Ro__Appli__02C769E9", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("Thesis.Entities.FK__aspnet_Ro__Appli__02C769E9", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("Thesis.Entities.FK__aspnet_Ro__Appli__02C769E9", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Us__Appli__540C7B00", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("Thesis.Entities.FK__aspnet_Us__Appli__540C7B00", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("Thesis.Entities.FK__aspnet_Us__Appli__540C7B00", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Me__Appli__6442E2C9", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Me__Appli__6442E2C9", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Me__Appli__6442E2C9", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Me__Appli__6442E2C9", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Me__Appli__6442E2C9", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Me__UserI__65370702", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static aspnet_Paths Createaspnet_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            aspnet_Paths aspnet_Paths = new aspnet_Paths();
            aspnet_Paths.ApplicationId = applicationId;
            aspnet_Paths.PathId = pathId;
            aspnet_Paths.Path = path;
            aspnet_Paths.LoweredPath = loweredPath;
            return aspnet_Paths;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                OnLoweredPathChanging(value);
                ReportPropertyChanging("LoweredPath");
                _LoweredPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredPath");
                OnLoweredPathChanged();
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Pa__Appli__15DA3E5D", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pe__PathI__1B9317B3", "aspnet_PersonalizationAllUsers")]
        public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_PersonalizationAllUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_PersonalizationAllUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_PersonalizationAllUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_PersonalizationAllUsers>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_PersonalizationAllUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pe__PathI__1F63A897", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("Thesis.Entities.FK__aspnet_Pe__PathI__1F63A897", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("Thesis.Entities.FK__aspnet_Pe__PathI__1F63A897", "aspnet_PersonalizationPerUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_PersonalizationAllUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationAllUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationAllUsers object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationAllUsers Createaspnet_PersonalizationAllUsers(global::System.Guid pathId, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers = new aspnet_PersonalizationAllUsers();
            aspnet_PersonalizationAllUsers.PathId = pathId;
            aspnet_PersonalizationAllUsers.PageSettings = pageSettings;
            aspnet_PersonalizationAllUsers.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationAllUsers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pe__PathI__1B9317B3", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1B9317B3", "aspnet_Paths", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_PersonalizationPerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationPerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationPerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationPerUser Createaspnet_PersonalizationPerUser(global::System.Guid id, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser = new aspnet_PersonalizationPerUser();
            aspnet_PersonalizationPerUser.Id = id;
            aspnet_PersonalizationPerUser.PageSettings = pageSettings;
            aspnet_PersonalizationPerUser.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationPerUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pe__PathI__1F63A897", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1F63A897", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1F63A897", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1F63A897", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("Thesis.Entities.FK__aspnet_Pe__PathI__1F63A897", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pe__UserI__2057CCD0", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pe__UserI__2057CCD0", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pe__UserI__2057CCD0", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pe__UserI__2057CCD0", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pe__UserI__2057CCD0", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Profile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValuesString">Initial value of the PropertyValuesString property.</param>
        /// <param name="propertyValuesBinary">Initial value of the PropertyValuesBinary property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_Profile Createaspnet_Profile(global::System.Guid userId, global::System.String propertyNames, global::System.String propertyValuesString, global::System.Byte[] propertyValuesBinary, global::System.DateTime lastUpdatedDate)
        {
            aspnet_Profile aspnet_Profile = new aspnet_Profile();
            aspnet_Profile.UserId = userId;
            aspnet_Profile.PropertyNames = propertyNames;
            aspnet_Profile.PropertyValuesString = propertyValuesString;
            aspnet_Profile.PropertyValuesBinary = propertyValuesBinary;
            aspnet_Profile.LastUpdatedDate = lastUpdatedDate;
            return aspnet_Profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValuesString
        {
            get
            {
                return _PropertyValuesString;
            }
            set
            {
                OnPropertyValuesStringChanging(value);
                ReportPropertyChanging("PropertyValuesString");
                _PropertyValuesString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesString");
                OnPropertyValuesStringChanged();
            }
        }
        private global::System.String _PropertyValuesString;
        partial void OnPropertyValuesStringChanging(global::System.String value);
        partial void OnPropertyValuesStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValuesBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValuesBinary);
            }
            set
            {
                OnPropertyValuesBinaryChanging(value);
                ReportPropertyChanging("PropertyValuesBinary");
                _PropertyValuesBinary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesBinary");
                OnPropertyValuesBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValuesBinary;
        partial void OnPropertyValuesBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValuesBinaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Ro__Appli__02C769E9", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Ro__Appli__02C769E9", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Ro__Appli__02C769E9", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Ro__Appli__02C769E9", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Ro__Appli__02C769E9", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_ModulesInRoles_aspnet_Roles", "ModulesInRoles")]
        public EntityCollection<ModulesInRoles> ModulesInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModulesInRoles>("Thesis.Entities.FK_ModulesInRoles_aspnet_Roles", "ModulesInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModulesInRoles>("Thesis.Entities.FK_ModulesInRoles_aspnet_Roles", "ModulesInRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RolesInTree_aspnet_Roles", "RolesInTree")]
        public EntityCollection<RolesInTree> RolesInTree
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolesInTree>("Thesis.Entities.FK_RolesInTree_aspnet_Roles", "RolesInTree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolesInTree>("Thesis.Entities.FK_RolesInTree_aspnet_Roles", "RolesInTree", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RolesInTree_aspnet_Roles1", "RolesInTree")]
        public EntityCollection<RolesInTree> RolesInTree1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolesInTree>("Thesis.Entities.FK_RolesInTree_aspnet_Roles1", "RolesInTree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolesInTree>("Thesis.Entities.FK_RolesInTree_aspnet_Roles1", "RolesInTree", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("Thesis.Entities.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("Thesis.Entities.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Us__Appli__540C7B00", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Us__Appli__540C7B00", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Us__Appli__540C7B00", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Us__Appli__540C7B00", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Thesis.Entities.FK__aspnet_Us__Appli__540C7B00", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Me__UserI__65370702", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Thesis.Entities.FK__aspnet_Me__UserI__65370702", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pe__UserI__2057CCD0", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("Thesis.Entities.FK__aspnet_Pe__UserI__2057CCD0", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("Thesis.Entities.FK__aspnet_Pe__UserI__2057CCD0", "aspnet_PersonalizationPerUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Profile")]
        public aspnet_Profile aspnet_Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Profile> aspnet_ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Profile>("Thesis.Entities.FK__aspnet_Pr__UserI__793DFFAF", "aspnet_Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("Thesis.Entities.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("Thesis.Entities.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="aspnet_WebEvent_Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_WebEvent_Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_WebEvent_Events object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventTimeUtc">Initial value of the EventTimeUtc property.</param>
        /// <param name="eventTime">Initial value of the EventTime property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventSequence">Initial value of the EventSequence property.</param>
        /// <param name="eventOccurrence">Initial value of the EventOccurrence property.</param>
        /// <param name="eventCode">Initial value of the EventCode property.</param>
        /// <param name="eventDetailCode">Initial value of the EventDetailCode property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static aspnet_WebEvent_Events Createaspnet_WebEvent_Events(global::System.String eventId, global::System.DateTime eventTimeUtc, global::System.DateTime eventTime, global::System.String eventType, global::System.Decimal eventSequence, global::System.Decimal eventOccurrence, global::System.Int32 eventCode, global::System.Int32 eventDetailCode, global::System.String machineName)
        {
            aspnet_WebEvent_Events aspnet_WebEvent_Events = new aspnet_WebEvent_Events();
            aspnet_WebEvent_Events.EventId = eventId;
            aspnet_WebEvent_Events.EventTimeUtc = eventTimeUtc;
            aspnet_WebEvent_Events.EventTime = eventTime;
            aspnet_WebEvent_Events.EventType = eventType;
            aspnet_WebEvent_Events.EventSequence = eventSequence;
            aspnet_WebEvent_Events.EventOccurrence = eventOccurrence;
            aspnet_WebEvent_Events.EventCode = eventCode;
            aspnet_WebEvent_Events.EventDetailCode = eventDetailCode;
            aspnet_WebEvent_Events.MachineName = machineName;
            return aspnet_WebEvent_Events;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.String _EventId;
        partial void OnEventIdChanging(global::System.String value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTimeUtc
        {
            get
            {
                return _EventTimeUtc;
            }
            set
            {
                OnEventTimeUtcChanging(value);
                ReportPropertyChanging("EventTimeUtc");
                _EventTimeUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTimeUtc");
                OnEventTimeUtcChanged();
            }
        }
        private global::System.DateTime _EventTimeUtc;
        partial void OnEventTimeUtcChanging(global::System.DateTime value);
        partial void OnEventTimeUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTime
        {
            get
            {
                return _EventTime;
            }
            set
            {
                OnEventTimeChanging(value);
                ReportPropertyChanging("EventTime");
                _EventTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTime");
                OnEventTimeChanged();
            }
        }
        private global::System.DateTime _EventTime;
        partial void OnEventTimeChanging(global::System.DateTime value);
        partial void OnEventTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventSequence
        {
            get
            {
                return _EventSequence;
            }
            set
            {
                OnEventSequenceChanging(value);
                ReportPropertyChanging("EventSequence");
                _EventSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventSequence");
                OnEventSequenceChanged();
            }
        }
        private global::System.Decimal _EventSequence;
        partial void OnEventSequenceChanging(global::System.Decimal value);
        partial void OnEventSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventOccurrence
        {
            get
            {
                return _EventOccurrence;
            }
            set
            {
                OnEventOccurrenceChanging(value);
                ReportPropertyChanging("EventOccurrence");
                _EventOccurrence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventOccurrence");
                OnEventOccurrenceChanged();
            }
        }
        private global::System.Decimal _EventOccurrence;
        partial void OnEventOccurrenceChanging(global::System.Decimal value);
        partial void OnEventOccurrenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCode
        {
            get
            {
                return _EventCode;
            }
            set
            {
                OnEventCodeChanging(value);
                ReportPropertyChanging("EventCode");
                _EventCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCode");
                OnEventCodeChanged();
            }
        }
        private global::System.Int32 _EventCode;
        partial void OnEventCodeChanging(global::System.Int32 value);
        partial void OnEventCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventDetailCode
        {
            get
            {
                return _EventDetailCode;
            }
            set
            {
                OnEventDetailCodeChanging(value);
                ReportPropertyChanging("EventDetailCode");
                _EventDetailCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDetailCode");
                OnEventDetailCodeChanged();
            }
        }
        private global::System.Int32 _EventDetailCode;
        partial void OnEventDetailCodeChanging(global::System.Int32 value);
        partial void OnEventDetailCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationPath
        {
            get
            {
                return _ApplicationPath;
            }
            set
            {
                OnApplicationPathChanging(value);
                ReportPropertyChanging("ApplicationPath");
                _ApplicationPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationPath");
                OnApplicationPathChanged();
            }
        }
        private global::System.String _ApplicationPath;
        partial void OnApplicationPathChanging(global::System.String value);
        partial void OnApplicationPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationVirtualPath
        {
            get
            {
                return _ApplicationVirtualPath;
            }
            set
            {
                OnApplicationVirtualPathChanging(value);
                ReportPropertyChanging("ApplicationVirtualPath");
                _ApplicationVirtualPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationVirtualPath");
                OnApplicationVirtualPathChanged();
            }
        }
        private global::System.String _ApplicationVirtualPath;
        partial void OnApplicationVirtualPathChanging(global::System.String value);
        partial void OnApplicationVirtualPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUrl
        {
            get
            {
                return _RequestUrl;
            }
            set
            {
                OnRequestUrlChanging(value);
                ReportPropertyChanging("RequestUrl");
                _RequestUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUrl");
                OnRequestUrlChanged();
            }
        }
        private global::System.String _RequestUrl;
        partial void OnRequestUrlChanging(global::System.String value);
        partial void OnRequestUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionType
        {
            get
            {
                return _ExceptionType;
            }
            set
            {
                OnExceptionTypeChanging(value);
                ReportPropertyChanging("ExceptionType");
                _ExceptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionType");
                OnExceptionTypeChanged();
            }
        }
        private global::System.String _ExceptionType;
        partial void OnExceptionTypeChanging(global::System.String value);
        partial void OnExceptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Cities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cities object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Cities CreateCities(global::System.Int32 cityID, global::System.Int32 countryID, global::System.String name)
        {
            Cities cities = new Cities();
            cities.CityID = cityID;
            cities.CountryID = countryID;
            cities.Name = name;
            return cities;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaCode
        {
            get
            {
                return _AreaCode;
            }
            set
            {
                OnAreaCodeChanging(value);
                ReportPropertyChanging("AreaCode");
                _AreaCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaCode");
                OnAreaCodeChanged();
            }
        }
        private global::System.String _AreaCode;
        partial void OnAreaCodeChanging(global::System.String value);
        partial void OnAreaCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Cities", "Addresses")]
        public EntityCollection<Addresses> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Cities", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Cities", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Cities_Countries", "Countries")]
        public Countries Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("Thesis.Entities.FK_Cities_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("Thesis.Entities.FK_Cities_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Countries> CountriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("Thesis.Entities.FK_Cities_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Countries>("Thesis.Entities.FK_Cities_Countries", "Countries", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Companies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Companies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Companies object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Companies CreateCompanies(global::System.Int32 companyID, global::System.String name)
        {
            Companies companies = new Companies();
            companies.CompanyID = companyID;
            companies.Name = name;
            return companies;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Executer", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Executer", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Executer", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Owner", "Activity")]
        public EntityCollection<Activity> Activity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Owner", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Owner", "Activity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Countries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Countries : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Countries object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Countries CreateCountries(global::System.Int32 countryID, global::System.String name)
        {
            Countries countries = new Countries();
            countries.CountryID = countryID;
            countries.Name = name;
            return countries;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaCode
        {
            get
            {
                return _AreaCode;
            }
            set
            {
                OnAreaCodeChanging(value);
                ReportPropertyChanging("AreaCode");
                _AreaCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaCode");
                OnAreaCodeChanged();
            }
        }
        private global::System.String _AreaCode;
        partial void OnAreaCodeChanging(global::System.String value);
        partial void OnAreaCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Flag
        {
            get
            {
                return _Flag;
            }
            set
            {
                OnFlagChanging(value);
                ReportPropertyChanging("Flag");
                _Flag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Flag");
                OnFlagChanged();
            }
        }
        private global::System.String _Flag;
        partial void OnFlagChanging(global::System.String value);
        partial void OnFlagChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Countries", "Addresses")]
        public EntityCollection<Addresses> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Countries", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Countries", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Cities_Countries", "Cities")]
        public EntityCollection<Cities> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cities>("Thesis.Entities.FK_Cities_Countries", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cities>("Thesis.Entities.FK_Cities_Countries", "Cities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Electriciteities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Electriciteities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Electriciteities object.
        /// </summary>
        /// <param name="electriciteitID">Initial value of the ElectriciteitID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Electriciteities CreateElectriciteities(global::System.Int32 electriciteitID, global::System.String name)
        {
            Electriciteities electriciteities = new Electriciteities();
            electriciteities.ElectriciteitID = electriciteitID;
            electriciteities.Name = name;
            return electriciteities;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ElectriciteitID
        {
            get
            {
                return _ElectriciteitID;
            }
            set
            {
                if (_ElectriciteitID != value)
                {
                    OnElectriciteitIDChanging(value);
                    ReportPropertyChanging("ElectriciteitID");
                    _ElectriciteitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ElectriciteitID");
                    OnElectriciteitIDChanged();
                }
            }
        }
        private global::System.Int32 _ElectriciteitID;
        partial void OnElectriciteitIDChanging(global::System.Int32 value);
        partial void OnElectriciteitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Electriciteities", "Addresses")]
        public EntityCollection<Addresses> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Electriciteities", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Electriciteities", "Addresses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Employees")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employees : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employees object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        public static Employees CreateEmployees(global::System.Int32 employeeId, global::System.String name, global::System.String surname)
        {
            Employees employees = new Employees();
            employees.EmployeeId = employeeId;
            employees.Name = name;
            employees.Surname = surname;
            return employees;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private Nullable<global::System.Decimal> _Salary;
        partial void OnSalaryChanging(Nullable<global::System.Decimal> value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Files")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Files : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Files object.
        /// </summary>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="mimetype">Initial value of the Mimetype property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        public static Files CreateFiles(global::System.Int32 fileID, global::System.String fileName, global::System.String mimetype, global::System.String path, global::System.String alias)
        {
            Files files = new Files();
            files.FileID = fileID;
            files.FileName = fileName;
            files.Mimetype = mimetype;
            files.Path = path;
            files.Alias = alias;
            return files;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                if (_FileID != value)
                {
                    OnFileIDChanging(value);
                    ReportPropertyChanging("FileID");
                    _FileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileID");
                    OnFileIDChanged();
                }
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mimetype
        {
            get
            {
                return _Mimetype;
            }
            set
            {
                OnMimetypeChanging(value);
                ReportPropertyChanging("Mimetype");
                _Mimetype = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mimetype");
                OnMimetypeChanged();
            }
        }
        private global::System.String _Mimetype;
        partial void OnMimetypeChanging(global::System.String value);
        partial void OnMimetypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _Size;
        partial void OnSizeChanging(Nullable<global::System.Int32> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Items")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Items : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Items object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemCode">Initial value of the ItemCode property.</param>
        public static Items CreateItems(global::System.Int32 itemId, global::System.String itemCode)
        {
            Items items = new Items();
            items.ItemId = itemId;
            items.ItemCode = itemCode;
            return items;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemCode
        {
            get
            {
                return _ItemCode;
            }
            set
            {
                OnItemCodeChanging(value);
                ReportPropertyChanging("ItemCode");
                _ItemCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemCode");
                OnItemCodeChanged();
            }
        }
        private global::System.String _ItemCode;
        partial void OnItemCodeChanging(global::System.String value);
        partial void OnItemCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Languages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Languages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Languages object.
        /// </summary>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Languages CreateLanguages(global::System.Int32 languageId, global::System.String name, global::System.String code)
        {
            Languages languages = new Languages();
            languages.LanguageId = languageId;
            languages.Name = name;
            languages.Code = code;
            return languages;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                if (_LanguageId != value)
                {
                    OnLanguageIdChanging(value);
                    ReportPropertyChanging("LanguageId");
                    _LanguageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageId");
                    OnLanguageIdChanged();
                }
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_LookupResources_Languages", "LookupResources")]
        public EntityCollection<LookupResources> LookupResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LookupResources>("Thesis.Entities.FK_LookupResources_Languages", "LookupResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LookupResources>("Thesis.Entities.FK_LookupResources_Languages", "LookupResources", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Lookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lookup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lookup object.
        /// </summary>
        /// <param name="lookupId">Initial value of the LookupId property.</param>
        /// <param name="lookupTypeId">Initial value of the LookupTypeId property.</param>
        public static Lookup CreateLookup(global::System.Int32 lookupId, global::System.Int32 lookupTypeId)
        {
            Lookup lookup = new Lookup();
            lookup.LookupId = lookupId;
            lookup.LookupTypeId = lookupTypeId;
            return lookup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                if (_LookupId != value)
                {
                    OnLookupIdChanging(value);
                    ReportPropertyChanging("LookupId");
                    _LookupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupId");
                    OnLookupIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupId;
        partial void OnLookupIdChanging(global::System.Int32 value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupTypeId
        {
            get
            {
                return _LookupTypeId;
            }
            set
            {
                OnLookupTypeIdChanging(value);
                ReportPropertyChanging("LookupTypeId");
                _LookupTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupTypeId");
                OnLookupTypeIdChanged();
            }
        }
        private global::System.Int32 _LookupTypeId;
        partial void OnLookupTypeIdChanging(global::System.Int32 value);
        partial void OnLookupTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_Lookup", "Addresses")]
        public EntityCollection<Addresses> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Lookup", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_Lookup", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_LookupResources_Lookup", "LookupResources")]
        public EntityCollection<LookupResources> LookupResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LookupResources>("Thesis.Entities.FK_LookupResources_Lookup", "LookupResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LookupResources>("Thesis.Entities.FK_LookupResources_Lookup", "LookupResources", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="LookupResources")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LookupResources : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LookupResources object.
        /// </summary>
        /// <param name="lookupResourcesId">Initial value of the LookupResourcesId property.</param>
        /// <param name="lookupId">Initial value of the LookupId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static LookupResources CreateLookupResources(global::System.Int32 lookupResourcesId, global::System.Int32 lookupId, global::System.Int32 languageId, global::System.String text)
        {
            LookupResources lookupResources = new LookupResources();
            lookupResources.LookupResourcesId = lookupResourcesId;
            lookupResources.LookupId = lookupId;
            lookupResources.LanguageId = languageId;
            lookupResources.Text = text;
            return lookupResources;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupResourcesId
        {
            get
            {
                return _LookupResourcesId;
            }
            set
            {
                if (_LookupResourcesId != value)
                {
                    OnLookupResourcesIdChanging(value);
                    ReportPropertyChanging("LookupResourcesId");
                    _LookupResourcesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupResourcesId");
                    OnLookupResourcesIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupResourcesId;
        partial void OnLookupResourcesIdChanging(global::System.Int32 value);
        partial void OnLookupResourcesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                OnLookupIdChanging(value);
                ReportPropertyChanging("LookupId");
                _LookupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupId");
                OnLookupIdChanged();
            }
        }
        private global::System.Int32 _LookupId;
        partial void OnLookupIdChanging(global::System.Int32 value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_LookupResources_Languages", "Languages")]
        public Languages Languages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("Thesis.Entities.FK_LookupResources_Languages", "Languages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("Thesis.Entities.FK_LookupResources_Languages", "Languages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Languages> LanguagesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Languages>("Thesis.Entities.FK_LookupResources_Languages", "Languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Languages>("Thesis.Entities.FK_LookupResources_Languages", "Languages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_LookupResources_Lookup", "Lookup")]
        public Lookup Lookup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("Thesis.Entities.FK_LookupResources_Lookup", "Lookup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("Thesis.Entities.FK_LookupResources_Lookup", "Lookup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lookup> LookupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("Thesis.Entities.FK_LookupResources_Lookup", "Lookup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lookup>("Thesis.Entities.FK_LookupResources_Lookup", "Lookup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Modules")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Modules : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Modules object.
        /// </summary>
        /// <param name="moduleId">Initial value of the ModuleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="loweredName">Initial value of the LoweredName property.</param>
        public static Modules CreateModules(global::System.Int32 moduleId, global::System.String name, global::System.String loweredName)
        {
            Modules modules = new Modules();
            modules.ModuleId = moduleId;
            modules.Name = name;
            modules.LoweredName = loweredName;
            return modules;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                if (_ModuleId != value)
                {
                    OnModuleIdChanging(value);
                    ReportPropertyChanging("ModuleId");
                    _ModuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModuleId");
                    OnModuleIdChanged();
                }
            }
        }
        private global::System.Int32 _ModuleId;
        partial void OnModuleIdChanging(global::System.Int32 value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredName
        {
            get
            {
                return _LoweredName;
            }
            set
            {
                OnLoweredNameChanging(value);
                ReportPropertyChanging("LoweredName");
                _LoweredName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredName");
                OnLoweredNameChanged();
            }
        }
        private global::System.String _LoweredName;
        partial void OnLoweredNameChanging(global::System.String value);
        partial void OnLoweredNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_ModulesInRoles_Modules", "ModulesInRoles")]
        public EntityCollection<ModulesInRoles> ModulesInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModulesInRoles>("Thesis.Entities.FK_ModulesInRoles_Modules", "ModulesInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModulesInRoles>("Thesis.Entities.FK_ModulesInRoles_Modules", "ModulesInRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="ModulesInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModulesInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModulesInRoles object.
        /// </summary>
        /// <param name="modulesInRolesId">Initial value of the ModulesInRolesId property.</param>
        /// <param name="moduleId">Initial value of the ModuleId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="processTypeId">Initial value of the ProcessTypeId property.</param>
        public static ModulesInRoles CreateModulesInRoles(global::System.Int32 modulesInRolesId, global::System.Int32 moduleId, global::System.Guid roleId, global::System.Int32 processTypeId)
        {
            ModulesInRoles modulesInRoles = new ModulesInRoles();
            modulesInRoles.ModulesInRolesId = modulesInRolesId;
            modulesInRoles.ModuleId = moduleId;
            modulesInRoles.RoleId = roleId;
            modulesInRoles.ProcessTypeId = processTypeId;
            return modulesInRoles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModulesInRolesId
        {
            get
            {
                return _ModulesInRolesId;
            }
            set
            {
                if (_ModulesInRolesId != value)
                {
                    OnModulesInRolesIdChanging(value);
                    ReportPropertyChanging("ModulesInRolesId");
                    _ModulesInRolesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModulesInRolesId");
                    OnModulesInRolesIdChanged();
                }
            }
        }
        private global::System.Int32 _ModulesInRolesId;
        partial void OnModulesInRolesIdChanging(global::System.Int32 value);
        partial void OnModulesInRolesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                OnModuleIdChanging(value);
                ReportPropertyChanging("ModuleId");
                _ModuleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleId");
                OnModuleIdChanged();
            }
        }
        private global::System.Int32 _ModuleId;
        partial void OnModuleIdChanging(global::System.Int32 value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessTypeId
        {
            get
            {
                return _ProcessTypeId;
            }
            set
            {
                OnProcessTypeIdChanging(value);
                ReportPropertyChanging("ProcessTypeId");
                _ProcessTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessTypeId");
                OnProcessTypeIdChanged();
            }
        }
        private global::System.Int32 _ProcessTypeId;
        partial void OnProcessTypeIdChanging(global::System.Int32 value);
        partial void OnProcessTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_ModulesInRoles_aspnet_Roles", "aspnet_Roles")]
        public aspnet_Roles aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_ModulesInRoles_aspnet_Roles", "aspnet_Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_ModulesInRoles_aspnet_Roles", "aspnet_Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Roles> aspnet_RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_ModulesInRoles_aspnet_Roles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Roles>("Thesis.Entities.FK_ModulesInRoles_aspnet_Roles", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_ModulesInRoles_Modules", "Modules")]
        public Modules Modules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modules>("Thesis.Entities.FK_ModulesInRoles_Modules", "Modules").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modules>("Thesis.Entities.FK_ModulesInRoles_Modules", "Modules").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modules> ModulesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modules>("Thesis.Entities.FK_ModulesInRoles_Modules", "Modules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modules>("Thesis.Entities.FK_ModulesInRoles_Modules", "Modules", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="ObjectTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectTypes object.
        /// </summary>
        /// <param name="objectTypeID">Initial value of the ObjectTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ObjectTypes CreateObjectTypes(global::System.Int32 objectTypeID, global::System.String name)
        {
            ObjectTypes objectTypes = new ObjectTypes();
            objectTypes.ObjectTypeID = objectTypeID;
            objectTypes.Name = name;
            return objectTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                if (_ObjectTypeID != value)
                {
                    OnObjectTypeIDChanging(value);
                    ReportPropertyChanging("ObjectTypeID");
                    _ObjectTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectTypeID");
                    OnObjectTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ObjectTypeID;
        partial void OnObjectTypeIDChanging(global::System.Int32 value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Addresses_ObjectTypes", "Addresses")]
        public EntityCollection<Addresses> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_ObjectTypes", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addresses>("Thesis.Entities.FK_Addresses_ObjectTypes", "Addresses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="RelationInAddresses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelationInAddresses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelationInAddresses object.
        /// </summary>
        /// <param name="relationInAddressesID">Initial value of the RelationInAddressesID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="relationID">Initial value of the RelationID property.</param>
        public static RelationInAddresses CreateRelationInAddresses(global::System.Int32 relationInAddressesID, global::System.Int32 addressID, global::System.Int32 relationID)
        {
            RelationInAddresses relationInAddresses = new RelationInAddresses();
            relationInAddresses.RelationInAddressesID = relationInAddressesID;
            relationInAddresses.AddressID = addressID;
            relationInAddresses.RelationID = relationID;
            return relationInAddresses;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationInAddressesID
        {
            get
            {
                return _RelationInAddressesID;
            }
            set
            {
                if (_RelationInAddressesID != value)
                {
                    OnRelationInAddressesIDChanging(value);
                    ReportPropertyChanging("RelationInAddressesID");
                    _RelationInAddressesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationInAddressesID");
                    OnRelationInAddressesIDChanged();
                }
            }
        }
        private global::System.Int32 _RelationInAddressesID;
        partial void OnRelationInAddressesIDChanging(global::System.Int32 value);
        partial void OnRelationInAddressesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationID
        {
            get
            {
                return _RelationID;
            }
            set
            {
                OnRelationIDChanging(value);
                ReportPropertyChanging("RelationID");
                _RelationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationID");
                OnRelationIDChanged();
            }
        }
        private global::System.Int32 _RelationID;
        partial void OnRelationIDChanging(global::System.Int32 value);
        partial void OnRelationIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RelationInAddresses_Addresses", "Addresses")]
        public Addresses Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_RelationInAddresses_Addresses", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_RelationInAddresses_Addresses", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Addresses> AddressesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("Thesis.Entities.FK_RelationInAddresses_Addresses", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Addresses>("Thesis.Entities.FK_RelationInAddresses_Addresses", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RelationInAddresses_Relations", "Relations")]
        public Relations Relations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relations>("Thesis.Entities.FK_RelationInAddresses_Relations", "Relations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relations>("Thesis.Entities.FK_RelationInAddresses_Relations", "Relations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Relations> RelationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relations>("Thesis.Entities.FK_RelationInAddresses_Relations", "Relations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Relations>("Thesis.Entities.FK_RelationInAddresses_Relations", "Relations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Relations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Relations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Relations object.
        /// </summary>
        /// <param name="relationID">Initial value of the RelationID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Relations CreateRelations(global::System.Int32 relationID, global::System.String name)
        {
            Relations relations = new Relations();
            relations.RelationID = relationID;
            relations.Name = name;
            return relations;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationID
        {
            get
            {
                return _RelationID;
            }
            set
            {
                if (_RelationID != value)
                {
                    OnRelationIDChanging(value);
                    ReportPropertyChanging("RelationID");
                    _RelationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationID");
                    OnRelationIDChanged();
                }
            }
        }
        private global::System.Int32 _RelationID;
        partial void OnRelationIDChanging(global::System.Int32 value);
        partial void OnRelationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Relations", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Relations", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Relations", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RelationInAddresses_Relations", "RelationInAddresses")]
        public EntityCollection<RelationInAddresses> RelationInAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelationInAddresses>("Thesis.Entities.FK_RelationInAddresses_Relations", "RelationInAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelationInAddresses>("Thesis.Entities.FK_RelationInAddresses_Relations", "RelationInAddresses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="RolesInTree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolesInTree : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RolesInTree object.
        /// </summary>
        /// <param name="rolesInTreeId">Initial value of the RolesInTreeId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="parentRoleId">Initial value of the ParentRoleId property.</param>
        public static RolesInTree CreateRolesInTree(global::System.Int32 rolesInTreeId, global::System.Guid roleId, global::System.Guid parentRoleId)
        {
            RolesInTree rolesInTree = new RolesInTree();
            rolesInTree.RolesInTreeId = rolesInTreeId;
            rolesInTree.RoleId = roleId;
            rolesInTree.ParentRoleId = parentRoleId;
            return rolesInTree;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolesInTreeId
        {
            get
            {
                return _RolesInTreeId;
            }
            set
            {
                if (_RolesInTreeId != value)
                {
                    OnRolesInTreeIdChanging(value);
                    ReportPropertyChanging("RolesInTreeId");
                    _RolesInTreeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RolesInTreeId");
                    OnRolesInTreeIdChanged();
                }
            }
        }
        private global::System.Int32 _RolesInTreeId;
        partial void OnRolesInTreeIdChanging(global::System.Int32 value);
        partial void OnRolesInTreeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParentRoleId
        {
            get
            {
                return _ParentRoleId;
            }
            set
            {
                OnParentRoleIdChanging(value);
                ReportPropertyChanging("ParentRoleId");
                _ParentRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentRoleId");
                OnParentRoleIdChanged();
            }
        }
        private global::System.Guid _ParentRoleId;
        partial void OnParentRoleIdChanging(global::System.Guid value);
        partial void OnParentRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RolesInTree_aspnet_Roles", "aspnet_Roles")]
        public aspnet_Roles aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles", "aspnet_Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles", "aspnet_Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Roles> aspnet_RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_RolesInTree_aspnet_Roles1", "aspnet_Roles")]
        public aspnet_Roles aspnet_Roles1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles1", "aspnet_Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles1", "aspnet_Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Roles> aspnet_Roles1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles1", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Roles>("Thesis.Entities.FK_RolesInTree_aspnet_Roles1", "aspnet_Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Roofs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roofs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Roofs object.
        /// </summary>
        /// <param name="roofID">Initial value of the RoofID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Roofs CreateRoofs(global::System.Int32 roofID, global::System.String name)
        {
            Roofs roofs = new Roofs();
            roofs.RoofID = roofID;
            roofs.Name = name;
            return roofs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoofID
        {
            get
            {
                return _RoofID;
            }
            set
            {
                if (_RoofID != value)
                {
                    OnRoofIDChanging(value);
                    ReportPropertyChanging("RoofID");
                    _RoofID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoofID");
                    OnRoofIDChanged();
                }
            }
        }
        private global::System.Int32 _RoofID;
        partial void OnRoofIDChanging(global::System.Int32 value);
        partial void OnRoofIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="Shifts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shifts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shifts object.
        /// </summary>
        /// <param name="shiftID">Initial value of the ShiftID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Shifts CreateShifts(global::System.Int32 shiftID, global::System.String name)
        {
            Shifts shifts = new Shifts();
            shifts.ShiftID = shiftID;
            shifts.Name = name;
            return shifts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShiftID
        {
            get
            {
                return _ShiftID;
            }
            set
            {
                if (_ShiftID != value)
                {
                    OnShiftIDChanging(value);
                    ReportPropertyChanging("ShiftID");
                    _ShiftID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShiftID");
                    OnShiftIDChanged();
                }
            }
        }
        private global::System.Int32 _ShiftID;
        partial void OnShiftIDChanging(global::System.Int32 value);
        partial void OnShiftIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Thesis.Entities", "FK_Activities_Shifts", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Shifts", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Thesis.Entities.FK_Activities_Shifts", "Activity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Thesis.Entities", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }

    #endregion
    
}
