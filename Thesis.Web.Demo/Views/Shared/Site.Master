<%@ Master Language="C#" Inherits="System.Web.Mvc.ViewMasterPage" %>

<%@ Register Assembly="Ext.Net" Namespace="Ext.Net" TagPrefix="ext" %>
<%@ Register Assembly="Axiom.Web.UI" Namespace="Thesis.Web.UI.Controls" TagPrefix="ax" %>
<%@ Register src="WestMenu.ascx" tagname="WestMenu" tagprefix="uc1" %>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" >
<head runat="server">
    <title>Thesis - Istanbul Bilgi University Computer Science</title>
    <ext:ResourcePlaceHolder runat="server" />
    <script type="text/javascript" src="/Scripts/Thesis.js"></script>
    <link rel="stylesheet" type="text/css" href="/Content/Site.css" />
</head>
<body>
    <ax:ResourceManager ID="ResourceManager1" runat="server" IDMode="Explicit" />
    
    <ext:ViewPort ID="ViewPort1" runat="server" Layout="border">
        <Items>
        <ext:Toolbar ID="Toolbar1" 
                runat="server" 
                Region="North" 
                Height="25" 
                Margins="0 0 4 0">
                <Items>
                    <ext:Label ID="lblAppName" 
                        runat="server" 
                        Html='<%# this.ViewData["AppName"] %>' 
                        Icon="Application" 
                        Cls="title-label"
                        AutoDataBind="true" 
                        />
                    <ext:ToolbarFill ID="ToolbarFill1" runat="server" />
                    <ext:Button ID="btnUser" 
                        runat="server" 
                        Icon="StatusOnline" 
                        Text='<%# this.ViewData["Username"] %>' 
                        AutoDataBind="true">
                        <Menu runat="server">
                            <ext:Menu ID="Menu1" runat="server">
                                <Items>
                                    <ext:MenuItem Text="Profile" Icon="Magnifier" Disabled="true" />
                                    <ext:MenuItem Text="Options" Icon="Wrench">
                                        <Menu runat="server">
                                            <ext:Menu ID="Menu2" runat="server">
                                                <Items>
                                                    <ext:MenuItem Text="Choose a Theme...">
                                                        <Menu runat="server">
                                                            <ext:Menu ID="Menu3" runat="server">
                                                                <Items>
                                                                    <ext:MenuItem Text="Default">
                                                                        <DirectEvents>
                                                                            <Click 
                                                                                CleanRequest="true" 
                                                                                Method="POST"
                                                                                Url="/Home/ChangeTheme"
                                                                                Success="Ax.SetTheme('/extjs/resources/css/ext-all-embedded-css/ext.axd', 'blue', 0);">
                                                                                    <ExtraParams><ext:Parameter Name="theme" Value="0" /></ExtraParams>
                                                                            </Click>
                                                                        </DirectEvents>
                                                                    </ext:MenuItem>
                                                                    <ext:MenuItem Text="Gray">
                                                                        <DirectEvents>
                                                                            <Click 
                                                                                CleanRequest="true" 
                                                                                Method="POST"
                                                                                Url="/Home/ChangeTheme"
                                                                                Success="Ax.SetTheme('/extjs/resources/css/xtheme-gray-embedded-css/ext.axd', 'gray', 1);">
                                                                                    <ExtraParams><ext:Parameter Name="theme" Value="1" /></ExtraParams>
                                                                            </Click>
                                                                        </DirectEvents>
                                                                    </ext:MenuItem>
                                                                    <ext:MenuItem Text="Slate">
                                                                        <DirectEvents>
                                                                            <Click 
                                                                                CleanRequest="true" 
                                                                                Method="POST"
                                                                                Url="/Home/ChangeTheme"
                                                                                Success="Ax.SetTheme('/extjs/resources/css/xtheme-slate-embedded-css/ext.axd', 'slate', 3);">
                                                                                    <ExtraParams><ext:Parameter Name="theme" Value="3" /></ExtraParams>
                                                                            </Click>
                                                                        </DirectEvents>
                                                                    </ext:MenuItem>
                                                                </Items>
                                                            </ext:Menu>
                                                        </Menu>
                                                    </ext:MenuItem>
                                                </Items>
                                            </ext:Menu>
                                        </Menu>
                                    </ext:MenuItem>
                                </Items>
                            </ext:Menu>
                        </Menu>
                    </ext:Button>
                    <ext:ToolbarSeparator ID="ToolbarSeparator1" runat="server" />
                    <ext:Button ID="btnLogout" runat="server" Icon="LockGo" Text="Logout">
                        <DirectEvents>
                            <Click Url="/Account/Logout" Before="Ax.Mask('Good Bye!');" />
                        </DirectEvents>
                    </ext:Button>
                </Items>
            </ext:Toolbar>                    
            <ext:Panel ID="pnlExplorer" 
                runat="server" 
                Region="West" 
                Split="true"
                CollapseMode="Mini"
                Width="225"  
                Margins="0 0 4 4">                
                <TopBar>
                    <ext:Toolbar ID="ToolbarExplorer" runat="server">
                        <Items>
                            <ext:ToolbarTextItem ID="ToolbarTextItemExplorer" runat="server" Text="Filter:" />
                            <ext:ToolbarSpacer />
                            <ext:TriggerField ID="FilterExplorerTrigger" Width="150" runat="server" EnableKeyEvents="true">
                                <Triggers>
                                    <ext:FieldTrigger Icon="Clear" />
                                </Triggers>
                            
                                <Listeners>
                                    <KeyUp Fn="filterExplorer" Buffer="250" />
                                    <TriggerClick Handler="clearFilter();" />
                                </Listeners>
                            </ext:TriggerField>
                        </Items>
                    </ext:Toolbar>
                </TopBar>
                <Content>
                    <uc1:WestMenu ID="WestMenu1" runat="server" />
                </Content>
            </ext:Panel>
            <ext:TabPanel 
                ID="tpMain" 
                runat="server" 
                Region="Center" 
                Margins="0 0 4 0" 
                EnableTabScroll="true">
                <Items>
                    <ext:Panel 
                        ID="Tab1" 
                        runat="server" 
                        Title="Home" 
                        Icon="ChartCurve" 
                        Border="false">
                        <AutoLoad 
                            Url="/Home/Dashboard/" 
                            Mode="IFrame" 
                            ShowMask="true" 
                            MaskMsg="Loading 'Dashboard'..." 
                            />
                    </ext:Panel>                        
                </Items>
                <Plugins>
                    <ext:TabCloseMenu ID="TabCloseMenu1" runat="server" />
                </Plugins>
            </ext:TabPanel>
        </Items>
    </ext:ViewPort>

    <script type="text/javascript">
        var filterExplorer = function (el, e) {
            if (e.getKey() === Ext.EventObject.ESC) {
                clearFilter();
            } else {
                var text = this.getRawValue().toLowerCase();

                if (Ext.isEmpty(text, false)) {
                    clearFilter();
                    return;
                }

                var pnlExplorer = Ext.getCmp('pnlExplorer');

                if (pnlExplorer) {
                    if (pnlExplorer.items && pnlExplorer.items.items) {
                        var menuPanels = pnlExplorer.items.items;
                        var filteredMenuPanel = Ext.getCmp('acFilterResults');

                        // clear filtered menu items start
                        if (filteredMenuPanel.menu) {
                            filteredMenuPanel.menu.removeAll();
                        }
                        // clear filtered menu items end

                        var hasMenuItem = false;
                        for (var i = 0; i < menuPanels.length; i++) {
                            var menuPanel = menuPanels[i];
                            if (menuPanel.id == 'acFilterResults') continue;
                            if (menuPanel.xtype == 'netmenupanel') {
                                menuPanel.hide();

                                if (menuPanel.menu && menuPanel.menu.items && menuPanel.menu.items.items) {
                                    var menuItems = menuPanel.menu.items.items;
                                    for (var j = 0; j < menuItems.length; j++) {
                                        var menuItem = menuItems[j];
                                        // show menuItem start
                                        if (menuItem.text.toLowerCase().indexOf(text) != -1) {
                                            filteredMenuPanel.menu.addMenuItem(menuItem.cloneConfig());
                                            hasMenuItem = true;
                                        }
                                        // show menuItem end
                                    }
                                }
                            }
                        }
                        // show filteredMenuPanel start
                        if (hasMenuItem) {
                            filteredMenuPanel.show();
                            filteredMenuPanel.expand();
                        } else {
                            filteredMenuPanel.hide();
                        }
                        // show filteredMenuPanel end
                    }
                }
            }
        };

        var clearFilter = function () {
            var filterExplorerTrigger = Ext.getCmp('FilterExplorerTrigger');
            filterExplorerTrigger.setValue('');

            var pnlExplorer = Ext.getCmp('pnlExplorer');

            if (pnlExplorer) {
                if (pnlExplorer.items && pnlExplorer.items.items) {
                    var menuPanels = pnlExplorer.items.items;
                    for (var i = 0; i < menuPanels.length; i++) {
                        var menuPanel = menuPanels[i];
                        if (menuPanel.xtype == 'netmenupanel') {
                            if (menuPanel.id == 'acFilterResults') {
                                menuPanel.collapse();
                                menuPanel.hide();
                            } else {
                                // show menuPanel start
                                if (menuPanel.hidden && menuPanel.hidden == true) {
                                    menuPanel.show();
                                }
                                if(i != 0)
                                    menuPanel.collapse();
                                // show menuPanel end

                                if (menuPanel.menu && menuPanel.menu.items && menuPanel.menu.items.items) {
                                    var menuItems = menuPanel.menu.items.items;
                                    for (var j = 0; j < menuItems.length; j++) {
                                        var menuItem = menuItems[j];
                                        // show menuItem start
                                        if (menuItem.hidden && menuItem.hidden == true) {
                                            menuItem.show();
                                        }
                                        // show menuItem end
                                    }
                                }
                            }
                        }
                    }
                    menuPanels[0].expand();
                }
            }
        };
    </script>
</body>
</html>
